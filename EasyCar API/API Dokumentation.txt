------------------------------------------------------------
-----Allgemein-----
------------------------------------------------------------

Die EasyCar API gibt immer ein Response-Objekt mit folgendem Aufbau zurück:
Response {
	bool contains_response
	List<object>? response_list
	string? error_message
}
<<< Attribute:
<<<<<< bool contains_response: True falls es eine Antwort gibt, False bei einem Fehler
<<<<<< List<object>? response_list: Eine Liste mit allen Objekten, die auf die Abfrage passen. Im Falle eines Fehlers null
<<<<<< string? error_message: Beschreibung des Fehlers. Falls kein Fehler ausgelöst wurde null



------------------------------------------------------------
-----Funktionen-----
------------------------------------------------------------

PrüfeAnmeldung(string nutzername, string passwort): Personal
<<< Rückgabe: Der Nutzer mit diesem Nutzername und Passwort
<<< Mögliche Fehler:
<<<<<< Kein passender Nutzer
<<<<<< Mehr als ein passender Nutzer


GetFahrzeuge(int aktuell_gebucht, long personal_id, long marke_id, long modell_id, long typ_id, long zustand_id): List<Fahrzeug>
<<< Übergaben:
<<<<<< int aktuell_gebucht:
<<<<<<<<< -1: Aktueller Buchungsstatus wird nicht berücksichtigt
<<<<<<<<<  0: Es werden nur Fahrzeuge berücksichtigt, die zum aktuellen Zeitpunkt nicht gebucht sind
<<<<<<<<<  1: Es werden nur Fahrzeuge berücksichtigt, die zum aktuellen Zeitpunkt gebucht sind 
<<<<<< long personal_id:
<<<<<<<<< -1: Die Person, welche die Buchung veranlasst hat, wird nicht berücksichtigt
<<<<<<<<<  x: Es werden nur Fahrzeuge berücksichtigt, die jemals von dieser Person gebucht worden sind
<<<<<< long marke_id:
<<<<<<<<< -1: Der Marke-Filter wird nicht beachtet
<<<<<<<<<  x: Es erscheinen nur Fahrzeuge mit dieser MarkeID
<<<<<< long modell_id:
<<<<<<<<< -1: Der Modell-Filter wird nicht beachtet
<<<<<<<<<  x: Es erscheinen nur Fahrzeuge mit dieser ModellID
<<<<<< long typ_id:
<<<<<<<<< -1: Der Typ-Filter wird nicht beachtet
<<<<<<<<<  x: Es erscheinen nur Fahrzeuge mit dieser TypID
<<<<<< long zustand_id:
<<<<<<<<< -1: Der Zustand-Filter wird nicht beachtet
<<<<<<<<<  x: Es erscheinen nur Fahrzeuge mit dieser ZustandID
<<< Rückgabe: Eine Liste mit allen entsprechenden Fahrzeugen
<<< Mögliche Fehler:
<<<<<< Keine passende Fahrzeuge gefunden
<<<<<< aktuell_gebucht ist nicht -1, 0 oder 1


GetFahrten(int aktuell_gebucht, long personal_id, long fahrzeug_id): List<Fahrt>
<<< Übergaben:
<<<<<< int aktuell_gebucht:
<<<<<<<<< -1: Aktualität der Fahrten wird nicht berücksichtigt
<<<<<<<<<  0: Es werden nur Fahrten berücksichtigt, die nicht aktuell stattfinden
<<<<<<<<<  1: Es werden nur aktuelle Fahrten berücksichtigt
<<<<<< long personal_id:
<<<<<<<<< -1: Die Person, welche die Fahrt veranlasst hat, wird nicht berücksichtigt
<<<<<<<<<  x: Es werden nur Fahrten berücksichtigt, die jemals von dieser Person gebucht worden sind
<<<<<< long fahrzeug_id:
<<<<<<<<< -1: Die FahrzeugID wird nicht beachtet
<<<<<<<<<  x: Es wurden nur Fahrten berücksichtigt, die mit dem Fahrzeug dieser FahrzeugID getätigt worden sind
<<< Rückgabe: Eine Liste mit allen entsprechenden Fahrten
<<< Mögliche Fehler:
<<<<<< Keine passenden Fahrten gefunden
<<<<<< aktuell_gebucht ist nicht -1, 0 oder 1


GetMarken(): List<Marke>
<<< Rückgabe: Eine Liste mit allen aktuell möglichen Marken
<<< Mögliche Fehler:
<<<<<< Keine Marken vorhanden


GetModelle(): List<Modell>
<<< Rückgabe: Eine Liste mit allen aktuell möglichen Modellen
<<< Mögliche Fehler:
<<<<<< Keine Modelle vorhanden


GetTypen(): List<Typ>
<<< Rückgabe: Eine Liste mit allen aktuell möglichen Typen
<<< Mögliche Fehler:
<<<<<< Keine Typen vorhanden


GetZustände(): List<Zustand>
<<< Rückgabe: Eine Liste mit allen aktuell möglichen Zuständen
<<< Mögliche Fehler:
<<<<<< Keine Zustände vorhanden


FahrzeugBuchen(long personal_id, long fahrzeug_id, DateTime datum_start): long
<<< Übergaben:
<<<<<< long personal_id: Die PersonalID der Person, welche die Buchung veranlasst
<<<<<< long fahrzeug_id: Die FahrzeugID des Fahrzeugs, welches gefahren werden soll
<<<<<< DateTime datum_start: Das Start-Datum der Fahrt
<<< Rückgabe: Die FahrtID der Fahrt, die gerade gebucht wurde
<<< Mögliche Fehler:
<<<<<< PersonalID ist unbekannt
<<<<<< FahrzeugID ist unbekannt


AddPersonal(Personal personal, string nutzername, string passwort): Personal
<<< Übergaben:
<<<<<< Personal personal: Alle Daten der anzulegenden Person, ID wird in der API gesetzt
<<<<<< string nutzername: Der Nutzername, den die anzulegende Person haben möchte
<<<<<< string passwort: Das Passwort, welches die anzulegende Person haben möchte
<<< Rückgabe: Personal mit der entsprechenden ID
<<< Mögliche Fehler:
<<<<<< Der gewünschte Nutzername ist bereits vergeben

AddFahrzeug(Fahrzeug fahrzeug): Fahrzeug
<<< Übergaben:
<<<<<< Fahrzeug fahrzeug: Alle Daten des anzulegenden Fahrzeug, ID wird in der API gesetzt
<<< Rückgabe: Fahrzeug mit der entsprechenden ID


FahrzeugAusbuchen(long fahrt_id, long fahrzeug_id, long zustand_id, int km_ende, DateTime datum_ende): long
<<< Übergaben:
<<<<<< long fahrt_id_id: Die FahrtID der Fahrt, welche ausgebucht werden soll
<<<<<< long fahrzeug_id: Die FahrzeugID des Fahrzeugs, welches ausgebucht werden soll
<<<<<< long zustand_id: Die ZustandID des Zustandes, in welchem sich das Fahrzeug nun befindet
<<<<<< int km_ende: Der aktuelle KM-Stand des Autos
<<<<<< DateTime datum_ende: Das End-Datum der Fahrt
<<< Rückgabe: Die FahrtID der Fahrt, die gerade beendet wurde
<<< Mögliche Fehler:
<<<<<< End-KM sind geringer als Start-KM
<<<<<< End-Datum ist geringer als End-KM
<<<<<< Die auszubuchende Fahrt kann nicht gefunden werden


DeletePersonal(long personal_id): int
<<< Übergaben:
<<<<<< long personal_id: Die PersonalID der Person, die gelöscht werden soll
<<< Rückgabe: 1
<<< Mögliche Fehler:
<<<<<< Personal mit dieser ID kann nicht gefunden werden


DeleteFahrzeug(long fahrzeug_id): int
<<< Übergaben:
<<<<<< long fahrzeug_id: Die FahrzeugID des Fahrzeugs, welches gelöscht werden soll
<<< Rückgabe: 1
<<< Mögliche Fehler:
<<<<<< Fahrzeug mit dieser ID kann nicht gefunden werden